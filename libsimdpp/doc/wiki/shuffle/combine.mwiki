{{simdpp/title|combine}}
{{shuffle/navbar}}
{{dcl begin}}
{{dcl |
template< unsigned N, class E1, class E2 >
Ret<N*2> combine( const Vec1<N,E1>& a, const Vec2<N,E2>& b );
}}
{{dcl end}}

Combines two vectors into one vector twice as wide. The implementation behaves as if the following set of overloads is provided:

{{vset begin}}
{{vset3 h | Ret | Vec1 | Vec2}}
{{vset3 | int8 | int8 | int8}}
{{vset3 | uint8 | uint8 | int8}}
{{vset3 | int16 | int16 | int16}}
{{vset3 | uint16 | uint16 | uint16}}
{{vset3 | int32 | int32 | int32}}
{{vset3 | uint32 | uint32 | uint32}}
{{vset3 | int64 | int64 | int64}}
{{vset3 | uint64 | uint64 | uint64}}
{{vset3 | float32 | float32 | float32}}
{{vset3 | float64 | float64 | float64}}
{{vset end}}

===Parameters===
{{par begin}}
{{par | a, b | vectors to combine}}
{{par end}}

===Return value===
A twice as wide vector

===Equivalent operation===
{{source|1=
r0 = a0
...
rM = aM
r{M+1} = b0
...
r{M+M} = bM
}}

===See also===
{{todo}}
