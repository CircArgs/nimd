{{simdpp/title|zip16_lo, zip8_lo, zip4_lo, zip2_lo}}
{{shuffle/navbar}}
{{dcl begin}}
{{dcl |
template<unsigned N, class V1, class V2>
Ret<N, _DETAIL_> zip16_lo( const any_vec8<N,V1>& a,
                           const any_vec8<N,V2>& b );
}}
{{dcl |
template<unsigned N, class V1, class V2>
Ret<N, _DETAIL_> zip8_lo( const any_vec16<N,V1>& a,
                          const any_vec16<N,V2>& b );
}}
{{dcl |
template<unsigned N, class V1, class V2>
Ret<N, _DETAIL_> zip4_lo( const any_vec32<N,V1>& a,
                          const any_vec32<N,V2>& b );
}}
{{dcl |
template<unsigned N, class V1, class V2>
Ret<N, _DETAIL_> zip2_lo( const any_vec64<N,V1>& a,
                          const any_vec64<N,V2>& b );
}}
{{dcl end}}

Interleaves elements from the lower halves of two source vectors. Each 128-bit lane within vectors is processed separately.

The return vector type is governed by the [[types/promotion|expression promotion]] rules.

===Parameters===
{{par begin}}
{{par | a, b | source vectors }}
{{par end}}

===Return value===
A [[types#expr|vector expression]].

===Equivalent operation===
For the {{c|uint32x4}} case:
{{source|1=
r = [ a0 b0 a1 b1 ]
}}

For the {{c|uint32x8}} case:
{{source|1=
r = [ a0 b0 a1 b1 a4 b4 a5 b5 ]
}}

===See also===
{{todo}}
