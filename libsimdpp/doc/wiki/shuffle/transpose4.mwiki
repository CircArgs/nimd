{{simdpp/title|transpose2}}
{{shuffle/navbar}}
{{dcl begin}}
{{dcl |
template<unsigned N>
void transpose4( Vec<N>& a, Vec<N>& b, Vec<N>& c, Vec<N>& d );
}}
{{dcl end}}

Transposes two vectors at 4x4 element block granularity.

The implementation behaves as if the following set of overloads is provided:

{{vset begin}}
{{vset1 h | Vec }}
{{vset1 | int16 }}
{{vset1 | uint16 }}
{{vset1 | int32 }}
{{vset1 | uint32 }}
{{vset1 | int64 }}
{{vset1 | uint64 }}
{{vset1 | float32 }}
{{vset1 | float64 }}
{{vset end}}

===Parameters===
{{par begin}}
{{par | a, b, c, d | vectors to transpose }}
{{par end}}

===Return value===
(none)

===Equivalent operation===
{{source|1=
a = [ a0 , b0 , c0 , d0  ,  a4 , b4 , c4 , d4 , ... ]
b = [ a1 , b1 , c1 , d1  ,  a5 , b5 , c5 , d5 , ... ]
c = [ a2 , b2 , c2 , d2  ,  a6 , b6 , c6 , d6 , ... ]
d = [ a3 , b3 , c3 , d3  ,  a7 , b7 , c7 , d7 , ... ]
}}

===See also===
{{todo}}
