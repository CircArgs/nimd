/* Generated by Nim Compiler v1.6.8 */
/* Compiled for: Linux, amd64, gcc */
/* Command for C compiler:
   g++ -c -std=gnu++14 -funsigned-char  -w -fmax-errors=3 -fpermissive   -I/home/nick/.choosenim/toolchains/nim-1.6.8/lib -I/home/nick/Projects/nimd/src -o /home/nick/Projects/nimd/cache/@m..@s..@s..@s.choosenim@stoolchains@snim-1.6.8@slib@ssystem@sio.nim.cpp.o /home/nick/Projects/nimd/cache/@m..@s..@s..@s.choosenim@stoolchains@snim-1.6.8@slib@ssystem@sio.nim.cpp */
#define NIM_INTBITS 64

#include "nimbase.h"
#include <stdio.h>
#undef LANGUAGE_C
#undef MIPSEB
#undef MIPSEL
#undef PPC
#undef R3000
#undef R4000
#undef i386
#undef linux
#undef mips
#undef near
#undef far
#undef powerpc
#undef unix
  #  define nimfr_(proc, file) \
      TFrame FR_; \
      FR_.procname = proc; FR_.filename = file; FR_.line = 0; FR_.len = 0; nimFrame(&FR_);

  #  define nimfrs_(proc, file, slots, length) \
      struct {TFrame* prev;NCSTRING procname;NI line;NCSTRING filename; NI len; VarSlot s[slots];} FR_; \
      FR_.procname = proc; FR_.filename = file; FR_.line = 0; FR_.len = length; nimFrame((TFrame*)&FR_);

  #  define nimln_(n, file) \
      FR_.line = n; FR_.filename = file;
  struct NimStringDesc;
struct TGenericSeq;
struct TGenericSeq {
NI len;
NI reserved;
};
struct NimStringDesc : public TGenericSeq {
NIM_CHAR data[SEQ_DECL_SIZE];
};
N_LIB_PRIVATE N_NOINLINE(void, raiseIndexError2)(NI i, NI n);
static N_INLINE(NCSTRING, nimToCStringConv)(NimStringDesc* s);
N_LIB_PRIVATE N_NOINLINE(void, raiseOverflow)(void);
static N_INLINE(void, nimFrame)(TFrame* s);
N_LIB_PRIVATE N_NOINLINE(void, callDepthLimitReached__system_2993)(void);
static N_INLINE(void, popFrame)(void);
extern TFrame* framePtr__system_2564;
extern TFrame* framePtr__system_2564;
extern TFrame* framePtr__system_2564;
extern TFrame* framePtr__system_2564;
extern TFrame* framePtr__system_2564;
extern TFrame* framePtr__system_2564;
static N_INLINE(NCSTRING, nimToCStringConv)(NimStringDesc* s) {
	NCSTRING result;
	result = (NCSTRING)0;
	{
		NIM_BOOL T3_;
		T3_ = (NIM_BOOL)0;
		T3_ = (s == ((NimStringDesc*) NIM_NIL));
		if (T3_) goto LA4_;
		T3_ = ((*s).len == ((NI) 0));
		LA4_: ;
		if (!T3_) goto LA5_;
{		result = "";
}	}
	goto LA1_;
	LA5_: ;
	{
		result = ((NCSTRING) ((*s).data));
	}
	LA1_: ;
	return result;
}
static N_INLINE(void, nimFrame)(TFrame* s) {
	{
		if (!(framePtr__system_2564 == ((TFrame*) NIM_NIL))) goto LA3_;
{		(*s).calldepth = ((NI16) 0);
}	}
	goto LA1_;
	LA3_: ;
	{
		(*s).calldepth = (NI16)((*framePtr__system_2564).calldepth + ((NI16) 1));
	}
	LA1_: ;
	(*s).prev = framePtr__system_2564;
	framePtr__system_2564 = s;
	{
		if (!((*s).calldepth == ((NI16) 2000))) goto LA8_;
{		callDepthLimitReached__system_2993();
}	}
	LA8_: ;
}
static N_INLINE(void, popFrame)(void) {
	framePtr__system_2564 = (*framePtr__system_2564).prev;
}
N_LIB_PRIVATE N_NIMCALL(void, echoBinSafe)(NimStringDesc** args, NI argsLen_0) {
	nimfr_("echoBinSafe", "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/io.nim");
	nimln_(815, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/io.nim");
	flockfile(stdout);
	{
		NimStringDesc** s;
		s = (NimStringDesc**)0;
		nimln_(8, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/iterators.nim");
		NI i = ((NI) 0);
		{
			nimln_(9, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/iterators.nim");
			while (1) {
				NI TM__MnCJ0VAmeZ9aTATUB39cx60Q_2;
				if (!(i < argsLen_0)) goto LA3;
				nimln_(818, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/io.nim");
				if (i < 0 || i >= argsLen_0){ raiseIndexError2(i,argsLen_0-1); }
				s = (&args[i]);
				nimln_(822, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/io.nim");
				nimln_(818, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/io.nim");
				int T4_ = fwrite(((void*) (nimToCStringConv((*s)))), ((size_t) (((*s) ? (*s)->len : 0))), ((size_t) 1), stdout);
				(void)(T4_);
				nimln_(11, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/iterators.nim");
				if (nimAddInt(i, ((NI) 1), &TM__MnCJ0VAmeZ9aTATUB39cx60Q_2)) { raiseOverflow(); };
				i = (NI)(TM__MnCJ0VAmeZ9aTATUB39cx60Q_2);
			} LA3: ;
		}
	}
	nimln_(824, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/io.nim");
	int T5_ = fwrite(((void*) ("\012")), ((size_t) 1), ((size_t) 1), stdout);
	(void)(T5_);
	nimln_(825, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/io.nim");
	int T6_ = fflush(stdout);
	(void)(T6_);
	nimln_(827, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/io.nim");
	funlockfile(stdout);
	popFrame();
}
