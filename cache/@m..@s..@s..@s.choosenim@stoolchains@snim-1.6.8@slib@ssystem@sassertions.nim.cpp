/* Generated by Nim Compiler v1.6.8 */
/* Compiled for: Linux, amd64, gcc */
/* Command for C compiler:
   g++ -c -std=gnu++14 -funsigned-char  -w -fmax-errors=3 -fpermissive   -I/home/nick/.choosenim/toolchains/nim-1.6.8/lib -I/home/nick/Projects/nimd/src -o /home/nick/Projects/nimd/cache/@m..@s..@s..@s.choosenim@stoolchains@snim-1.6.8@slib@ssystem@sassertions.nim.cpp.o /home/nick/Projects/nimd/cache/@m..@s..@s..@s.choosenim@stoolchains@snim-1.6.8@slib@ssystem@sassertions.nim.cpp */
#define NIM_INTBITS 64

#include "nimbase.h"
#undef LANGUAGE_C
#undef MIPSEB
#undef MIPSEL
#undef PPC
#undef R3000
#undef R4000
#undef i386
#undef linux
#undef mips
#undef near
#undef far
#undef powerpc
#undef unix
  #  define nimfr_(proc, file) \
      TFrame FR_; \
      FR_.procname = proc; FR_.filename = file; FR_.line = 0; FR_.len = 0; nimFrame(&FR_);

  #  define nimfrs_(proc, file, slots, length) \
      struct {TFrame* prev;NCSTRING procname;NI line;NCSTRING filename; NI len; VarSlot s[slots];} FR_; \
      FR_.procname = proc; FR_.filename = file; FR_.line = 0; FR_.len = length; nimFrame((TFrame*)&FR_);

  #  define nimln_(n, file) \
      FR_.line = n; FR_.filename = file;
  struct NimStringDesc;
struct TGenericSeq;
struct tyObject_AssertionDefect__PtYxPmY5X0dorfvxAFbJpQ;
struct tyObject_Defect__LbeSGvgPzGzXnW9caIkJqMA;
struct Exception;
struct RootObj;
struct TNimType;
struct TNimNode;
struct tySequence__uB9b75OUPRENsBAu4AnoePA;
struct tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g;
struct tyObject_CellSeq__Axo1XVm9aaQueTOldv8le5w;
struct tyObject_GcHeap__1TRH1TZMaVZTnLNcIHuNFQ;
struct tyObject_GcStack__7fytPA5bBsob6See21YMRA;
struct tyObject_MemRegion__x81NhDv59b8ercDZ9bi85jyg;
struct tyObject_SmallChunk__tXn60W2f8h3jgAYdEmy5NQ;
struct tyObject_BigChunk__Rv9c70Uhp2TytkX7eH78qEg;
struct tyObject_LLChunk__XsENErzHIZV9bhvyJx56wGw;
struct tyObject_IntSet__EZObFrE3NC9bIb3YMkY9crZA;
struct tyObject_Trunk__W0r8S0Y3UGke6T9bIUWnnuw;
struct tyObject_AvlNode__IaqjtwKhxLEpvDS9bct9blEw;
struct tyObject_HeapLinks__PDV1HBZ8CQSQJC9aOBFNRSg;
struct tyTuple__ujsjpB2O9cjj3uDHsXbnSzg;
struct tyObject_GcStat__0RwLoVBHZPfUAcLczmfQAg;
struct tyObject_CellSet__jG87P0AI9aZtss9ccTYBIISQ;
struct tyObject_PageDesc__fublkgIY4LG3mT51LU2WHg;
struct tyObject_StackTraceEntry__oLyohQ7O2XOvGnflOss8EA;
struct TGenericSeq {
NI len;
NI reserved;
};
struct NimStringDesc : public TGenericSeq {
NIM_CHAR data[SEQ_DECL_SIZE];
};
typedef NU8 tyEnum_TNimKind__jIBKr1ejBgsfM33Kxw4j7A;
typedef NU8 tySet_tyEnum_TNimTypeFlag__v8QUszD1sWlSIWZz7mC4bQ;
typedef N_NIMCALL_PTR(void, tyProc__ojoeKfW4VYIm36I9cpDTQIg) (void* p, NI op);
typedef N_NIMCALL_PTR(void*, tyProc__WSm2xU5ARYv9aAR4l0z9c9auQ) (void* p);
struct TNimType {
NI size;
NI align;
tyEnum_TNimKind__jIBKr1ejBgsfM33Kxw4j7A kind;
tySet_tyEnum_TNimTypeFlag__v8QUszD1sWlSIWZz7mC4bQ flags;
TNimType* base;
TNimNode* node;
void* finalizer;
tyProc__ojoeKfW4VYIm36I9cpDTQIg marker;
tyProc__WSm2xU5ARYv9aAR4l0z9c9auQ deepcopy;
};
struct RootObj {
TNimType* m_type;
};
struct Exception : public RootObj {
Exception* parent;
NCSTRING name;
NimStringDesc* message;
tySequence__uB9b75OUPRENsBAu4AnoePA* trace;
Exception* up;
};
struct tyObject_Defect__LbeSGvgPzGzXnW9caIkJqMA : public Exception {
};
struct tyObject_AssertionDefect__PtYxPmY5X0dorfvxAFbJpQ : public tyObject_Defect__LbeSGvgPzGzXnW9caIkJqMA {
};
typedef NU8 tyEnum_TNimNodeKind__unfNsxrcATrufDZmpBq4HQ;
struct TNimNode {
tyEnum_TNimNodeKind__unfNsxrcATrufDZmpBq4HQ kind;
NI offset;
TNimType* typ;
NCSTRING name;
NI len;
TNimNode** sons;
};
struct tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g {
NI refcount;
TNimType* typ;
};
struct tyObject_GcStack__7fytPA5bBsob6See21YMRA {
void* bottom;
};
struct tyObject_CellSeq__Axo1XVm9aaQueTOldv8le5w {
NI len;
NI cap;
tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g** d;
};
typedef tyObject_SmallChunk__tXn60W2f8h3jgAYdEmy5NQ* tyArray__SPr7N6UKfuF549bNPiUvSRw[256];
typedef NU32 tyArray__BHbOSqU1t9b3Gt7K2c6fQig[24];
typedef tyObject_BigChunk__Rv9c70Uhp2TytkX7eH78qEg* tyArray__N1u1nqOgmuJN9cSZrnMHgOQ[32];
typedef tyArray__N1u1nqOgmuJN9cSZrnMHgOQ tyArray__B6durA4ZCi1xjJvRtyYxMg[24];
typedef tyObject_Trunk__W0r8S0Y3UGke6T9bIUWnnuw* tyArray__lh2A89ahMmYg9bCmpVaplLbA[256];
struct tyObject_IntSet__EZObFrE3NC9bIb3YMkY9crZA {
tyArray__lh2A89ahMmYg9bCmpVaplLbA data;
};
typedef tyObject_AvlNode__IaqjtwKhxLEpvDS9bct9blEw* tyArray__0aOLqZchNi8nWtMTi8ND8w[2];
struct tyObject_AvlNode__IaqjtwKhxLEpvDS9bct9blEw {
tyArray__0aOLqZchNi8nWtMTi8ND8w link;
NI key;
NI upperBound;
NI level;
};
struct tyTuple__ujsjpB2O9cjj3uDHsXbnSzg {
tyObject_BigChunk__Rv9c70Uhp2TytkX7eH78qEg* Field0;
NI Field1;
};
typedef tyTuple__ujsjpB2O9cjj3uDHsXbnSzg tyArray__LzOv2eCDGiceMKQstCLmhw[30];
struct tyObject_HeapLinks__PDV1HBZ8CQSQJC9aOBFNRSg {
NI len;
tyArray__LzOv2eCDGiceMKQstCLmhw chunks;
tyObject_HeapLinks__PDV1HBZ8CQSQJC9aOBFNRSg* next;
};
struct tyObject_MemRegion__x81NhDv59b8ercDZ9bi85jyg {
NI minLargeObj;
NI maxLargeObj;
tyArray__SPr7N6UKfuF549bNPiUvSRw freeSmallChunks;
NU32 flBitmap;
tyArray__BHbOSqU1t9b3Gt7K2c6fQig slBitmap;
tyArray__B6durA4ZCi1xjJvRtyYxMg matrix;
tyObject_LLChunk__XsENErzHIZV9bhvyJx56wGw* llmem;
NI currMem;
NI maxMem;
NI freeMem;
NI occ;
NI lastSize;
tyObject_IntSet__EZObFrE3NC9bIb3YMkY9crZA chunkStarts;
tyObject_AvlNode__IaqjtwKhxLEpvDS9bct9blEw* root;
tyObject_AvlNode__IaqjtwKhxLEpvDS9bct9blEw* deleted;
tyObject_AvlNode__IaqjtwKhxLEpvDS9bct9blEw* last;
tyObject_AvlNode__IaqjtwKhxLEpvDS9bct9blEw* freeAvlNodes;
NIM_BOOL locked;
NIM_BOOL blockChunkSizeIncrease;
NI nextChunkSize;
tyObject_AvlNode__IaqjtwKhxLEpvDS9bct9blEw bottomData;
tyObject_HeapLinks__PDV1HBZ8CQSQJC9aOBFNRSg heapLinks;
};
struct tyObject_GcStat__0RwLoVBHZPfUAcLczmfQAg {
NI stackScans;
NI cycleCollections;
NI maxThreshold;
NI maxStackSize;
NI maxStackCells;
NI cycleTableSize;
NI64 maxPause;
};
struct tyObject_CellSet__jG87P0AI9aZtss9ccTYBIISQ {
NI counter;
NI max;
tyObject_PageDesc__fublkgIY4LG3mT51LU2WHg* head;
tyObject_PageDesc__fublkgIY4LG3mT51LU2WHg** data;
};
struct tyObject_GcHeap__1TRH1TZMaVZTnLNcIHuNFQ {
tyObject_GcStack__7fytPA5bBsob6See21YMRA stack;
NI cycleThreshold;
NI zctThreshold;
tyObject_CellSeq__Axo1XVm9aaQueTOldv8le5w zct;
tyObject_CellSeq__Axo1XVm9aaQueTOldv8le5w decStack;
tyObject_CellSeq__Axo1XVm9aaQueTOldv8le5w tempStack;
NI recGcLock;
tyObject_MemRegion__x81NhDv59b8ercDZ9bi85jyg region;
tyObject_GcStat__0RwLoVBHZPfUAcLczmfQAg stat;
tyObject_CellSet__jG87P0AI9aZtss9ccTYBIISQ marked;
tyObject_CellSeq__Axo1XVm9aaQueTOldv8le5w additionalRoots;
NI gcThreadId;
};
struct tyObject_StackTraceEntry__oLyohQ7O2XOvGnflOss8EA {
NCSTRING procname;
NI line;
NCSTRING filename;
};
struct tySequence__uB9b75OUPRENsBAu4AnoePA : TGenericSeq {
  tyObject_StackTraceEntry__oLyohQ7O2XOvGnflOss8EA data[SEQ_DECL_SIZE];
};
N_LIB_PRIVATE N_NOINLINE(void, raiseAssert__systemZassertions_32)(NimStringDesc* msg) __attribute__((noreturn));
static N_INLINE(void, sysFatal__systemZassertions_34)(NimStringDesc* message) __attribute__((noreturn));
N_LIB_PRIVATE N_NOINLINE(void*, newObj)(TNimType* typ, NI size);
N_LIB_PRIVATE N_NIMCALL(NimStringDesc*, copyStringRC1)(NimStringDesc* src);
static N_INLINE(void, nimGCunrefNoCycle)(void* p);
static N_INLINE(void, decRef__system_5358)(tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g* c);
static N_INLINE(NI, minuspercent___system_716)(NI x, NI y);
static N_INLINE(void, nimFrame)(TFrame* s);
N_LIB_PRIVATE N_NOINLINE(void, callDepthLimitReached__system_2993)(void);
static N_INLINE(void, popFrame)(void);
static N_INLINE(NIM_BOOL, ltpercent___system_1005)(NI x, NI y);
static N_INLINE(void, rtlAddZCT__system_5356)(tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g* c);
N_LIB_PRIVATE N_NOINLINE(void, addZCT__system_5307)(tyObject_CellSeq__Axo1XVm9aaQueTOldv8le5w& s, tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g* c);
static N_INLINE(tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g*, usrToCell__system_5313)(void* usr);
N_LIB_PRIVATE N_NIMCALL(void, raiseExceptionEx)(Exception* e, NCSTRING ename, NCSTRING procname, NCSTRING filename, NI line);
extern TNimType NTIrefassertiondefect__S8DV6hfcgC9c0IiUsAoR29cQ_;
extern TNimType NTIassertiondefect__PtYxPmY5X0dorfvxAFbJpQ_;
extern TFrame* framePtr__system_2564;
extern TFrame* framePtr__system_2564;
extern TFrame* framePtr__system_2564;
extern TFrame* framePtr__system_2564;
extern TFrame* framePtr__system_2564;
extern TFrame* framePtr__system_2564;
extern tyObject_GcHeap__1TRH1TZMaVZTnLNcIHuNFQ gch__system_5260;
static N_INLINE(void, nimFrame)(TFrame* s) {
	{
		if (!(framePtr__system_2564 == ((TFrame*) NIM_NIL))) goto LA3_;
{		(*s).calldepth = ((NI16) 0);
}	}
	goto LA1_;
	LA3_: ;
	{
		(*s).calldepth = (NI16)((*framePtr__system_2564).calldepth + ((NI16) 1));
	}
	LA1_: ;
	(*s).prev = framePtr__system_2564;
	framePtr__system_2564 = s;
	{
		if (!((*s).calldepth == ((NI16) 2000))) goto LA8_;
{		callDepthLimitReached__system_2993();
}	}
	LA8_: ;
}
static N_INLINE(void, popFrame)(void) {
	framePtr__system_2564 = (*framePtr__system_2564).prev;
}
static N_INLINE(NI, minuspercent___system_716)(NI x, NI y) {
	NI result;
	nimfr_("-%", "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/arithmetics.nim");
	result = (NI)0;
	nimln_(414, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/arithmetics.nim");
	nimln_(418, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/arithmetics.nim");
	result = ((NI) ((NU)((NU64)(((NU) (x))) - (NU64)(((NU) (y))))));
	popFrame();
	return result;
}
static N_INLINE(NIM_BOOL, ltpercent___system_1005)(NI x, NI y) {
	NIM_BOOL result;
	nimfr_("<%", "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/comparisons.nim");
	result = (NIM_BOOL)0;
	nimln_(186, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/comparisons.nim");
	nimln_(188, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/comparisons.nim");
	result = ((NU64)(((NU) (x))) < (NU64)(((NU) (y))));
	popFrame();
	return result;
}
static N_INLINE(void, rtlAddZCT__system_5356)(tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g* c) {
	nimfr_("rtlAddZCT", "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/gc.nim");
	nimln_(243, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/gc.nim");
	addZCT__system_5307(gch__system_5260.zct, c);
	popFrame();
}
static N_INLINE(void, decRef__system_5358)(tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g* c) {
	nimfr_("decRef", "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/gc.nim");
	nimln_(248, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/gc.nim");
	(*c).refcount = minuspercent___system_716((*c).refcount, ((NI) 8));
	nimln_(249, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/gc.nim");
	{
		NIM_BOOL T3_ = ltpercent___system_1005((*c).refcount, ((NI) 8));
		if (!T3_) goto LA4_;
{		nimln_(250, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/gc.nim");
		rtlAddZCT__system_5356(c);
}	}
	LA4_: ;
	popFrame();
}
static N_INLINE(tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g*, usrToCell__system_5313)(void* usr) {
	tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g* result;
	nimfr_("usrToCell", "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/gc.nim");
	result = (tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g*)0;
	nimln_(177, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/gc.nim");
	NI T1_ = minuspercent___system_716(((NI) (ptrdiff_t) (usr)), ((NI) 16));
	result = ((tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g*) (T1_));
	popFrame();
	return result;
}
static N_INLINE(void, nimGCunrefNoCycle)(void* p) {
	nimfr_("nimGCunrefNoCycle", "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/gc.nim");
	nimln_(276, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/gc.nim");
	tyObject_Cell__1zcF9cV8XIAtbN8h5HRUB8g* T1_ = usrToCell__system_5313(p);
	decRef__system_5358(T1_);
	popFrame();
}
static N_INLINE(void, sysFatal__systemZassertions_34)(NimStringDesc* message) {
	tyObject_AssertionDefect__PtYxPmY5X0dorfvxAFbJpQ* T1_;
	NimStringDesc* T2_;
	nimfr_("sysFatal", "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/fatal.nim");
	T1_ = NIM_NIL;
	T1_ = (tyObject_AssertionDefect__PtYxPmY5X0dorfvxAFbJpQ*) newObj((&NTIrefassertiondefect__S8DV6hfcgC9c0IiUsAoR29cQ_), sizeof(tyObject_AssertionDefect__PtYxPmY5X0dorfvxAFbJpQ));
	(*T1_).m_type = (&NTIassertiondefect__PtYxPmY5X0dorfvxAFbJpQ_);
	(*T1_).name = "AssertionDefect";
	T2_ = NIM_NIL;
	T2_ = (*T1_).message; (*T1_).message = copyStringRC1(message);
	if (T2_) nimGCunrefNoCycle(T2_);
	nimln_(53, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/fatal.nim");
	raiseExceptionEx((Exception*)T1_, "AssertionDefect", "sysFatal", "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/fatal.nim", 53);
	popFrame();
}
N_LIB_PRIVATE N_NOINLINE(void, raiseAssert__systemZassertions_32)(NimStringDesc* msg) {
	nimfr_("raiseAssert", "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/assertions.nim");
	nimln_(28, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/assertions.nim");
	sysFatal__systemZassertions_34(msg);
	popFrame();
}
N_LIB_PRIVATE N_NIMCALL(void, failedAssertImpl__systemZassertions_56)(NimStringDesc* msg) {
	nimfr_("failedAssertImpl", "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/assertions.nim");
	nimln_(38, "/home/nick/.choosenim/toolchains/nim-1.6.8/lib/system/assertions.nim");
	raiseAssert__systemZassertions_32(msg);
	popFrame();
}
